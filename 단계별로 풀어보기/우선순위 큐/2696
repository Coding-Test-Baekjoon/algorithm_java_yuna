import java.io.*;
import java.util.*;
public class Main {
    public static void main(String[] args) throws IOException {
	
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        StringBuilder output = new StringBuilder();

        int t = Integer.parseInt(br.readLine());

        while (t-- > 0) {
            int m = Integer.parseInt(br.readLine());
            List<Integer> numbersList = new ArrayList<>();
            
            while (numbersList.size() < m) {
                String[] line = br.readLine().split(" ");
                for (String s : line) {
                    if (!s.isEmpty()) {
                        numbersList.add(Integer.parseInt(s));
                    }
                }
            }

            List<Integer> mediansList = new ArrayList<>();

            // 최대 힙 -> 중앙값 이하 (작은 값)
            PriorityQueue<Integer> left = new PriorityQueue<>(Collections.reverseOrder());
            // 최소 힙 -> 중앙값 초과 (큰 값)
            PriorityQueue<Integer> right = new PriorityQueue<>();

            for (int i = 0; i < m; i++) {
                int number = numbersList.get(i);

                if (left.size() == right.size()) {
                    left.offer(number);
                } else {
                    right.offer(number);
                }
                
                if (!right.isEmpty() && left.peek() > right.peek()) {
                    int lp = left.poll();
                    int rp = right.poll();
                    left.offer(rp);
                    right.offer(lp);
                }

                // 홀수 번째 수 => 중앙값 저장
                if (i % 2 == 0) {
                    mediansList.add(left.peek());
                }
            }

            output.append(mediansList.size()).append("\n");
            
            // 1줄에 10개씩 출력되도록 포맷팅
            for (int i = 0; i < mediansList.size(); i++) {
                output.append(mediansList.get(i));
                if ((i + 1) % 10 == 0 || i == mediansList.size() - 1) {
                    output.append("\n");
                } else {
                    output.append(" ");
                }
            }
        }

        System.out.print(output);
    }
	
}
